var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","company","custom","order","filereader","lineitem","order","orderscontroller","ordershelper","create()","extract_order_line()","gross_revenue()","index()","new()","parse_columns()","parse_order()","parse_orders()","read_data()","upload()","readme"],"longSearchIndex":["applicationcontroller","applicationhelper","company","custom","custom::order","filereader","lineitem","order","orderscontroller","ordershelper","orderscontroller#create()","filereader#extract_order_line()","order#gross_revenue()","orderscontroller#index()","filereader::new()","filereader#parse_columns()","filereader#parse_order()","order#parse_orders()","filereader#read_data()","orderscontroller#upload()",""],"info":[["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Company","","Company.html","","<p>This class represents the company that can have many orders\n"],["Custom","","Custom.html","",""],["Custom::Order","","Custom/Order.html","",""],["FileReader","","FileReader.html","","<p>This class reads a tab delimited data file, parses the order data and\nreturns an array of orders\n<p>Author … &mdash; "],["LineItem","","LineItem.html","","<p>This class represents the line items in the order uploaded Each line item\ncan have the following attributes: …\n"],["Order","","Order.html","","<p>This class represents the orders uploaded for a company An order can have\nmany line items\n"],["OrdersController","","OrdersController.html","","<p>This class is responsible for getting list of companies and their  order\ndetails. It also creates an …\n"],["OrdersHelper","","OrdersHelper.html","",""],["create","OrdersController","OrdersController.html#method-i-create","()","<p>Creates the company based on name passed in parameters, if  the company\ndoes not exist in the database …\n"],["extract_order_line","FileReader","FileReader.html#method-i-extract_order_line","(row, index)","<p>Extracts line items from order row\n"],["gross_revenue","Order","Order.html#method-i-gross_revenue","()","<p>Returns the gross revenue for the order\n"],["index","OrdersController","OrdersController.html#method-i-index","()","<p>Sets the list companies in an instance variable\n"],["new","FileReader","FileReader.html#method-c-new","(file_path=nil)","<p>initialized data file path\n"],["parse_columns","FileReader","FileReader.html#method-i-parse_columns","(row_data)","<p>maps column names to their position (starting postion is 0)\n"],["parse_order","FileReader","FileReader.html#method-i-parse_order","(data)","<p>parses order data and returns the order\n"],["parse_orders","Order","Order.html#method-i-parse_orders","(orders_data)","<p>Parses the order data from the <em>orders_data</em> file passed in\n"],["read_data","FileReader","FileReader.html#method-i-read_data","()","<p>reads each line of data from tab delimited data file\n"],["upload","OrdersController","OrdersController.html#method-i-upload","()","<p>Creates an instance of company if not already set\n"],["README","","README_rdoc.html","","<p>README\n<p>This application is recommended to be used with\n<p>Ruby version 2.1.0\n"]]}}